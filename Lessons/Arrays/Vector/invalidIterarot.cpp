// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// Пример инвалидации итератора в векторе
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
#include <iostream>
#include <vector>
using namespace std;

int main() {
    vector<int> v {1, 2, 3, 4, 5, 6, 7};
    auto it {v.begin()};
    ++it; // Движемся ко 2-му элементу
    cout << *it << '\n'; // Выводится 2
    v.erase(it); // Удаляем указанный элемент
    // После этой операции сбиваются этот и последующие элементы
    ++it; // Неопределённое поведение, т.к. теперь it является недействительным
    cout << *it << '\n'; // Неопределённое поведение
    return 0;
}
// Output
/*
2
4
*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //