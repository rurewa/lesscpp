// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Фиксированные массивы. Начало
// fixArr.cpp в папке Arrays
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
#include <iostream>
using namespace std;
/*
1,0,100,25,3 - коллекция однотипных элементов.
{0, 1, 2} - Каждый элемент в массиве является переменной без своего имени
и находится под своим порядковым номером, называемым индексом, который
всегда начинается с нуля и этот порядок нельзя изменить.
0 до N-1 - это диапазон массива
Индекс массива всегда числовой и используется как способ доступа к элеманту массива.
*/
int main() {
    short arr[3];  // Объявили фиксированный массив размером 3
    arr[0] = {10}; // Инициализировали 1-й индекс массива значением
    arr[1] = {20}; // Инициализировали 2-й индекс массива значением
    arr[2] = {30}; // Инициализировали 3-й индекс массива значением
    //arr[3] = {50}; // Ошибка! Расширить фиксированный массив нельзя
    puts("Содержимое массива arr:");
    cout << arr[0] << ' ' << arr[1] << ' ' << arr[2] << endl;
    // Размер массива в байтах
    int arrSize = sizeof(arr); // Short - это 2 байта
    cout << "Размер массива в байтах: " << arrSize << endl;
    // Подсчитать количество элементов в массиве
    // Поскольку каждый элемент массива может быть больше 1-го байта
    int arrCount = sizeof(arr) / sizeof(arr[0]); // то делим результат на размер 1-го элемента
    cout << "Тип объекта: " << typeid(arr).name() << endl; // Для компилятора C++ это переменная int[3]
    cout << "Количество элементов в массиве arr: " << arrCount << endl;
    int array[5] = {0}; // Инициализация массива нулями.
    //  Это способ инициализаии исключительно для нулей!
    puts("Содержимое массива array");
    for (int i = 0; i != 5; ++i) {
        cout << array[i] << ' ';
    }
    cout << '\n';
    puts("Содержимое массива array другим способом");
    for (auto i : array) { // Специальная и предпочтительная форма For для массивов
        cout << i << ' ';
    }
    cout << '\n';
    int arra[3] = {5}; // Проиницизирован будет только 1-й элемент
    puts("Содержимое массива arra");
    for (auto i : arra) {
        cout << i << ' ';
    }
    cout << '\n';
    const short ARR_INDEX[] = {5, 4, 3, -2, 1}; // Массив констант
    for (auto i = 0; i <= 4; ++i) { // Показать содержимое привычным способом
        cout << ARR_INDEX[i] << ' ';
    }
    cout << '\n';
    puts("Содержимое массива ARR_INDEX другим способом");
    for (auto i : ARR_INDEX) {
        cout << i << ' ';
    }
    cout << '\n';
    puts("Заполнение массива с помощью цикла");
    int newArr[5];
    for (int a = 0; a <= 4; ++a) {
        newArr[a] = a + 1;
        // Тут мы присваиваем новое значение каждому элементу массива, циалично, перебирая его индексы
    }
    for (auto i : newArr) {
        cout << i << ' ';
    }
    cout << '\n';
    return 0;
}
// Output
/*
10 20 30
Количество элементов в массиве arr: 3
Размер массива в байтах: 6
5 4 3 -2 1
5 4 3 -2 1
2 3 4 5 6
*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
