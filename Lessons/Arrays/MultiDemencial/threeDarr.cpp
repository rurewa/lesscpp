// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Многомерный массив
// threeDarr.cpp Array
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
#include <iostream>
using namespace std;

int main() {
    int arr[2][3][5] {{{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}, {11, 12, 13, 14, 15}}, {{-1, -2}}}; // Где [подмассивы][столбцы][ряды]
    cout << "[0][0][0] - " << arr[0][0][0] << '\n'; // 1
    cout << "[0][0][1] - " << arr[0][0][1] << '\n'; // 2
    cout << "[0][0][2] - " << arr[0][0][2] << '\n'; // 3
    cout << "[0][1][0] - " << arr[0][1][0] << '\n'; // 6
    cout << "[0][1][1] - " << arr[0][1][1] << '\n'; // 7
    cout << "[0][1][2] - " << arr[0][1][2] << '\n'; // 8
    cout << "[0][2][4] - " << arr[0][2][4] << '\n'; // 15
    cout << "[1][0][0] - " << arr[1][0][0] << '\n'; // -1
    return 0;
}
// Д.З. Дописать threeDarr.cpp, чтобы программа напечатала на экране значения всех элементов 3D массива
// Output:
/*
[0][0][0] - 1
[0][0][1] - 2
[0][0][2] - 3
[0][1][0] - 6
[0][1][1] - 7
[0][1][2] - 8
[0][2][4] - 15
[1][0][0] - -1
*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
