// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Построение матриц чисел и символов
// matrices.cpp Arrays/MultiDem
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
#include <iostream>
using namespace std;

int main() {
    const int N = 4, M = 4;
    int a[N][M];
    cout << "1-й вариант\n";
    for (int i = 0; i < N; cout << endl, ++i) {
        for (int j = 0; j < M; ++j) {
            a[i][j] = 0; // Заполняем матрицу 0-ми
            cout << a[i][j] << ' '; // Показываем матрицу
        }
    }
    cout << "2-й вариант\n";
    for (int i = 0; i < N; cout << endl, ++i) {
        for (int j = 0; j < M; ++j) {
            a[i][j] = i + 1;
            cout << a[i][j] << ' ';
        }
    }
    cout << "3-й вариант\n";
    for (int i = 0; i < N; cout << endl, ++i) {
        for (int j = 0; j < M; ++j) {
            a[i][j] = i + j;
            cout << a[i][j] << ' ';
        }
    }
    cout << "4-й вариант\n";
    for (int i = 1; i <= N; cout << endl, ++i) {
        for (int j = 0; j < M; ++j) {
            a[i][j] = i + j;
            cout << a[i][j] << ' ';
        }
    }
    cout << "5-й вариант\n";
    int b = 15;
    int arr[15][15]; // Новый массив
    for (int i = 0; i < b; ++i) { // Обработка
        for (int k = 0; k < b; ++k) {
            if (i == k || i == b - 1 - k || i == b / 2 || k == b / 2) {
                arr[i][k] = 1;
            }
            else {
                arr[i][k] = 0;
            }
        }
    }
    for (int i = 0; i < b; cout << endl, ++i) {
        for (int k = 0; k < b; ++k) {
            if (arr[i][k] == 0) {
                cout << "."
                     << " ";
            }
            else {
                cout << "*"
                     << " ";
            }
        }
    }
    cout << "6-й вариант\n";
    int x = 10, y = 10, c = 0;
    int ar[x][y];
    // Обработка
    for (int i = 0; i < x; ++i) {
        for (int k = 0; k != y; ++k) {
            ++c; // 1 2 3...
            if (i % 2 == 0) {
                ar[i][k] = c;
            }
            else {
                ar[i][y - k - 1] = c;
            }
        }
    }
    // Вывод
    for (int i = 0; i != x; cout << endl, ++i) {
        for (int k = 0; k != y; ++k) {
            if (ar[i][k] % 10 == ar[i][k]) {
                cout << "   "; // 3-и пробела
            }
            else if (ar[i][k] % 100 == ar[i][k]) {
                cout << "  "; // 2-a пробела
            }
            else if (ar[i][k] % 1000 == ar[i][k]) {
                cout << ' ';
            }
            cout << ar[i][k];
        }
    }
    cout << "7-й\n";
    int chess[8][8] {{0}};
    for (int i = 0; i != 8; cout << endl, ++i) {
        for (int k = 0; k != 8; ++k) {
            if (i % 2 == 0) {
                if (k % 2 == 0) {
                    chess[i][k] = 1;
                }
            }
            if (i % 2 != 0) {
                if (k % 2 != 0) {
                    chess[i][k] = 1;
                }
            }
            cout << chess[i][k];
        }
    }
    cout << "8-й вариант\n";
    char ches[8][8];
    for (int i = 0; i != 8; ++i) {
        for (int k = 0; k != 8; ++k) {
            if ((i + k) % 2 == 0) {
                ches[i][k] = ' ';
            }
            else {
                ches[i][k] = '#';
            }
        }
    }
    cout << "Результат: \n";
    for (int i = 0; i != 8; cout << endl, ++i) {
        for (int k = 0; k != 8; ++k) {
            cout << "\e[47m" << ches[i][k]  << "\e[0m";
        }
    }
    return 0;
}
// Output:
/*
1-й вариант
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
2-й вариант
1 1 1 1
2 2 2 2
3 3 3 3
4 4 4 4
3-й вариант
0 1 2 3
1 2 3 4
2 3 4 5
3 4 5 6
4-й вариант
1 2 3 4
2 3 4 5
3 4 5 6
4 5 6 7
5-й вариант
* . . . . . . * . . . . . . *
. * . . . . . * . . . . . * .
. . * . . . . * . . . . * . .
. . . * . . . * . . . * . . .
. . . . * . . * . . * . . . .
. . . . . * . * . * . . . . .
. . . . . . * * * . . . . . .
* * * * * * * * * * * * * * *
. . . . . . * * * . . . . . .
. . . . . * . * . * . . . . .
. . . . * . . * . . * . . . .
. . . * . . . * . . . * . . .
. . * . . . . * . . . . * . .
. * . . . . . * . . . . . * .
* . . . . . . * . . . . . . *
6-й вариант
   1   2   3   4   5   6   7   8   9  10
  20  19  18  17  16  15  14  13  12  11
  21  22  23  24  25  26  27  28  29  30
  40  39  38  37  36  35  34  33  32  31
  41  42  43  44  45  46  47  48  49  50
  60  59  58  57  56  55  54  53  52  51
  61  62  63  64  65  66  67  68  69  70
  80  79  78  77  76  75  74  73  72  71
  81  82  83  84  85  86  87  88  89  90
 100  99  98  97  96  95  94  93  92  91
7-й
10101010
01010101
10101010
01010101
10101010
01010101
10101010
01010101
8-й вариант
Результат:
 # # # #
# # # #
 # # # #
# # # #
 # # # #
# # # #
 # # # #
# # # #
*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
