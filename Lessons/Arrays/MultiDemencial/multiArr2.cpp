//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// Многомерные массивы
// V 1.0
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#include <iostream>
using namespace std;

int main() {
    const int ROW = 2; // Строки
    const int COL = 5; // Колонки (столбцы)
    int arr[ROW][COL]  {{1, 2, 3, 4, 5},{5, 4, 3, 2, 1}}; // arr[0-1][5]
    cout << arr[0][0] << ' ';
    cout << arr[0][1] << ' ';
    cout << arr[0][2] << ' ';
    cout << arr[0][3] << ' ';
    cout << arr[0][4] << ' ';
    cout << "\n\n";
    // Ещё вариант вывода содержимого 2-у мерного массива
    for (int i = 0; i < COL; ++i) {
        cout << arr[0][i] << ' ';
    }
    cout << endl;
    for (int k = 0; k < COL; ++k) {
        cout << arr[1][k] << ' ';
    }
    cout << "\n\n";
    // Более компактный способ вывода содержимого 2-у мерного масива
    for (int i = 0; i < ROW; ++i) { //
        for (int k = 0; k < COL; ++k) {
            cout << arr[i][k] << ' ';
        }
        cout << '\n';
    }
    cout << endl;
    // Создание матрицы чисел
    int barr[3][5]; // 3-и ряда и 5 столбцов
    for (int i = 0; i < 3; ++i) {
        for (int k = 0; k < 5; ++k) {
            barr[i][k] = i + k;
        }
    }
    for (int i = 0; i < 3; ++i) {
        for (int k = 0; k < 5; ++k) {
            cout << barr[i][k] << ' ';
        }
        cout << endl;
    }
    return 0;
}
// Output
/*
1 2 3 4 5

1 2 3 4 5
5 4 3 2 1

1 2 3 4 5
5 4 3 2 1

0 1 2 3 4
1 2 3 4 5
2 3 4 5 6
*/
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// End file
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
