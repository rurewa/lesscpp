// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// Поиск дубликатов в целочисленном массиве. Не закончен!
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
#include <iostream>
using namespace std;

int main()
{
    int massive[] = {1, 2, 3, 9, 4, 5, 6, 9, 7, 8, 0};
    int new_massive[] = {1, 2, 3, 9, 4, 5, 6, 9, 7, 8, 0};
    int size = sizeof(massive) / sizeof(massive[0]);
    int counter = 0;

    for (int i = 0; i < size; i++)
    {
        for (int j = 0; j < size; j++)
        {
            if (massive[i] == massive[j])
            {
                counter++;
            }
        }

        if (counter > 1 && massive[i] & 1) //нужно было сделать только для повторяющихся нечётных чисел
        {
            new_massive[i] = 0;
        }

        counter = 0;

        cout << new_massive[i] << "\n";
    }

    int wait;
    cin >> wait;
    return 0;
}
// Output
/*

*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
