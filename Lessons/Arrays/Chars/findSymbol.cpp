// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Поиск символа в символьном массиве
// findSymbol.cpp Arrays
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
#include <iostream>
using namespace std;

int main() {
    char arr_char[] = {'H', 'e', 'l', 'l', 'o'};
    const char *SUB_SIM = "z"; // Искомый подсимвол
    string char_arr_str = arr_char;
    if (char_arr_str.find(SUB_SIM) != string::npos) {
        cout << SUB_SIM
             << " подстрока найдена в массиве: "
             << char_arr_str << endl;
    }
    else {
        cout << SUB_SIM
             << " подстрока не найдена в массиве: "
             << char_arr_str << endl;
    }
    return 0;
}
// Д.З.
// OUTPUT // Возможный результат:
/*
Alex
Alex
*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //