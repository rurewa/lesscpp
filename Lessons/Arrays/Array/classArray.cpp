// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Фиксированные массивы класса array
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
#include <iostream>
#include <array> // Фиксированные массивы типа array
#include <algorithm>
using namespace std;

int main() {
    array<int, 4> iarray {8, 6, 4, 2}; // Массив натуральных чисел
    cout << iarray[0] << endl; // Выведет 0-й элемент массива. Допустимо.
    cout << "Размер массива: " << iarray.size() << endl;
    cout << (iarray.at(0) = 1) << endl; // Заменить сожержимое 0-го элемена и вывести на дисплей
    cout << iarray.at(3) << endl; // Так тоже можно вывести содержимое элемента массива
    //cout << iarray.at(5) << endl; // Вышли за предел диапазона в 4 элемента!
    cout << "Выводит 0-й элемент массива: " << iarray.front() << endl;
    cout << "Выводит последний элемент массива: " << iarray.back() << endl;
    iarray.fill(100); // Меняет все элементы массива на 100
    for (auto i : iarray) {
        cout << i << ' ';
    }
    cout << endl;
    array<int, 3> tarray; // Допустимо не указывать содержимое массива
    tarray.at(0) = 7;
    for (auto i : tarray) { // Не заполненные элементы содержат 0-и
        cout << i << ' ';
    }
    cout << endl;
    array<double, 3> darray {5.1, 8.6, 9.0}; // Массив типа double
    cout << darray[1] << endl;
    cout << "Размер массива: " << darray.size() << endl;
    darray.at(2) = 0.25;
    cout << darray[2] << endl;
    // Выводим текущее содержимое массива на дисплей
    for (auto i : darray) {
        cout << i << ' ';
    }
    cout << endl;
    // Сортируем содержимое массива по возрастанию
    sort(darray.begin(), darray.end());
    for (auto i : darray) {
        cout << i << ' ';
    }
    cout << endl;
    // Сортируем содержимое массива по убыванию
    sort(darray.begin(), darray.end(), greater<>());
    for (auto i : darray) {
        cout << i << ' ';
    }
    cout << endl;
    // Перемешаем содержимое массива случайным образом
    srand(time(0));
    for (int i = 0; i < 3; ++i) {
        swap(darray[i], darray[rand() % 3]); // Перемешиваем
    }
    for (auto i : darray) { // Выводим на экран
        cout << i << ' ';
    }
    cout << endl;
    cout << "Другой способ перемешать содержимое массива: \n";
    random_shuffle(darray.begin(), darray.end());
    for (auto i : darray) { // Выводим на экран
        cout << i << ' ';
    }
    cout << endl;
    /*
    Фиксированные массивы класса array безопасней простых фиксированных массивов, занимают меньше
    места в памяти и работают быстрей.
    */
    return 0;
}
// Output:
/*
8
Размер массива: 4
1
2
Выводит 0-й элемент массива: 1
Выводит последний элемент массива: 2
100 100 100 100
7 0 2
8.6
Размер массива: 3
0.25
5.1 8.6 0.25
0.25 5.1 8.6
8.6 5.1 0.25
8.6 0.25 5.1
Другой способ перемешать содержимое массива:
5.1 8.6 0.25
*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
