// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Массив и указатели
// arrRef.cpp
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
#include <iostream>
using namespace std;

int main() {
    int arr[] {5, 6, 7, 8};
    // Разыменование массива (переменной array) приведёт к возврату его 1-го
    // элемента - элемента с индексом 0
    cout << "Разыменование массива возвращает 1-й его элемент: \n" << *arr << '\n';
    char name[] = "John"; // C-style строка тоже массив
    cout << "Разыменование символьного массива возвращает 1-й его элемент: \n" << *name << '\n'; // Так же будет получен 0-й элемент
    int *ptr = arr;
    cout << "Разыменование массива через переменную-указатель: \n" << *ptr << '\n'; // Так можно
    cout << "Размер массива в битах: " << sizeof(arr) << " байт " << &arr << '\n'; // Возвращает размер в байтах
    cout << "Размер указателя: " << sizeof(ptr) << " байт " << &ptr << '\n'; // Размер указателя
    // В примере выше - фиксированный массив знает свою длину, а указатель на массив  - нет!
    cout << "Тип массива: " << typeid(arr).name() << '\n'; // Для компилятора массив arr всего лишь переменная int[4]
    puts("Адрес переменной arr является адресом 1-го элемента массива: ");
    cout << arr << " и " << &arr[0] << '\n';
    return 0;
}
// Output
/*
5
J
5
20 бит
8
*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //