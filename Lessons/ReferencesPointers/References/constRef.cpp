// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Константные ссылки
// constRef.cpp
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
#include<iostream>
using namespace std;

int main() {
    const int value = 7;
    const int &ref = value; // Константная ссылка на переменную
    //ref = 9; // Так нельзя. ref - это константа
    cout << "ref: " << ref << '\n';
    int a = 17;
    const int &aref = a; // Это неконстантное l-value, которая создаёт константную ссылку
    a = 19; // Так можно, т.к. a - не константа
    const int b = 9;
    //aref = 20; // Так нельзя. Это константа
    const int &bref = b; // Это константное l-value
    const int &cref = 5; // 5 - это r-value. Новый стандарт C++ это позволяет. Нужно в Классах
    cout << "a: " << a << " aref: " << aref << " b: " << b << " bref: "
         << bref << " cref: " << cref << '\n';
    //bref = 11; // Так нельзя. Это константа
    //cref = 15; // Так нельзя. Это константа
    return 0;
}
// Output
/*
ref: 7
a: 19 aref: 19 b: 9 bref: 9 cref: 5
7
*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //