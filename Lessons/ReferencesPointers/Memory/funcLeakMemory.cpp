//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// Утечка памяти
// funcLeakMemory.cpp
// V 1.0
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#include <iostream>
using namespace std;

void doSomething() {
    int *ptr = new int;
    cout << ptr << endl;
} // Тут программ может "потерять" адрес динамически выделенной памяти
/* Указатели, используемые для хранения динамически выделенных
адресов памяти следуют правилам области видимости обычных переменых.
Потерянные динамически выделенные адреса нельзя удалить. Это называется
утечкой памяти*/

int main() {

    return 0;
}
/*
Проверить потенциальные угрозы утечки памяти и висячие указатели можно командами:
1. clang-tidy main.cpp -- -Wall -std=c++14 -x c++
2. valgrind --leak-check=full ./main.bin
3. cppcheck main.cpp
*/
// Д.З.
// Output
/*

*/
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// End file
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-