// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Отображение разный типов данных в выходном потоке. Манипуляторы
// outDiffTypData.cpp Output
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
//#include <iomanip>
#include <iostream>
using namespace std;

int main() {
    double num = 22345.6789;
    puts("Отображение значения переменной в десятичном формате стандартной "
         "точности");
    // При таком отображении происходит округление дробной части
    cout << num << endl;
    puts("Отображение значения переменной в экспоненциальном формате");
    // Удобна для представления очень больших и очень малых чисел. Часто
    // используется в науке
    cout << scientific << num << endl; // scientific - манипулятор точности.
                                       // Показывает значение в экспоненте
    cout << fixed << num
         << endl; // fixed - отображать по умолчанию для этого типа
    cout << showpoint << num << endl;
    int i = 1025;
    puts("Вывод значения в 16-и ричном формате");
    cout << hex << i << endl;
    puts("Вывод значения в 8-и ричном формате");
    cout << oct << i << endl;
    return 0;
}
// Д.З.
// OUTPUT // ВОЗМОЖНЫЙ РЕЗУЛЬТАТ
/*

*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //