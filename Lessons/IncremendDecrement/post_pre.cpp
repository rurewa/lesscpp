// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Пре и пост инкремент числа
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
#include<iostream>
using namespace std;

/*
В постфиксных операторах производится дополнительная операция сохранения предыдущего
 состояния объекта, а затем только увеличение на 1, а в префиксном операторе после
  инкрементирования объекта, сразу возвращается ссылка объект. Префиксные операторы
   быстрее. Сигнатура их отличается фиктивным параметром int у постфиксного оператора.
*/

int main() {
    int num1 = 2000, num2 = 2000;
    ++num1;
    num2++;
    ++num1;
    num2++;
    ++num1;
    num2++;
    cout << "Результат пре и пост инкремента:\n";
    cout << "++num " << " num++" << '\n';
    cout << num1 << "\t" << num2 << "\n";
    cout << "Результат пре и пост инкремента с присваиванием:\n";
    num1 = 2000;
    num2 = 2000;
    num2 = ++num1;
    num1 = num2++;
    num2 = ++num1;
    num1 = num2++;
    num2 = ++num1;
    num1 = num2++;
    cout << num1 << "\t" << num2 << "\n";
    /*
    int i = 5;
	//i = ++i + 1; //
	cout << i << endl;
	//i = ++i + ++i; // Ошибка!
	//cout << i << '\n';
    */
    return 0;
}

/* Output:

*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//