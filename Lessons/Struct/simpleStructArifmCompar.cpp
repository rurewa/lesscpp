// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Примеры применения структуры
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
#include <iostream>
using namespace std;

struct Employe { // Сотрудник
    string name;
    short id;
    int age;
    double salary;
};

int main() {
    // Инициализируем члены структуры
    Employe ivan { "John", 8, 27, 75345.17}; // {Имя, id, возраст, зарплата}
    Employe petr { "James", 9, 30, 64456.35};
    Employe igor { "James", 9, 30, 61456.92};
    // Выводим на экран значения структур
    cout << "Name: " << ivan.name << endl;
    cout << "ID: " << ivan.id << endl;
    cout << "Age: " << ivan.age << endl;
    cout << "Salary: " << ivan.salary << endl;
    // Выполняем арифметические операции с членами структуры
    int averageAge = (ivan.age + petr.age + igor.age) / 3;
    // Печатаем результат вычисления значений членов структур
    cout << "Средний возраст: " << averageAge << endl;

    // Выполняем сравнение членов структур (как обычные переменные)
    if (ivan.salary > petr.salary) {
        cout << "Иван зарабатывает больше, чем Пётр" << endl;
    }
    else if (igor.salary < petr.salary) {
        cout << "Игорь зарабатывает меньше, чем Пётр" << endl;
    }
    else {
        cout << "Иван и Инорь зарабатывают одинаково" << endl;
    }

    return 0;
}
/* Output:
Name: John
ID: 8
Age: 27
Salary: 75345.2
Средний возраст: 29
Иван зарабатывает больше, чем Пётр
*/
// Задание
/* В эту программу ввести 4-го соотрудника и произвести с ним арифметику и сравнение с другими*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//