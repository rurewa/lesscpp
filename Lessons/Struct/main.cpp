// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Вложенные структуры
// Struct nestedStruct.cpp
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
#include <iostream>
using namespace std;

struct Employee // Сотрудник
{
    short id;
    string name;
    int age;
    double salary;
};

struct Company
{
    Employee CEO; // Исполнительный директор
    string company;
    int numberOfEmployees; // Количество сотрудников
};

int main() {
    // Инициализируем члены структуры
    Company compName {{3, "Ivan", 35, 155'000.33}, "JFC", 7};
    cout << "Компания: " << compName.company << endl;
    cout << "Количество сотрудников: " << compName.numberOfEmployees << endl;
    cout << "id исполнительного директора: " << compName.CEO.id << endl;
    cout << "Имя исполнительного директора: " << compName.CEO.name << endl;
    cout << "Возраст исполнительного директора: " << compName.CEO.age << endl;
    cout << "Зарплата исполнительного директора: " << compName.CEO.salary << endl;
    return 0;
}
// OUTPUT
/*
Компания: JFC
Количество сотрудников: 7
id исполнительного директора: 3
Имя исполнительного директора: Ivan
Возраст исполнительного директора: 35
Зарплата исполнительного директора: 155000
*/
// Задание 1
/* Добавить в эту программу ещё одну компанию с любым названием и похожими данными, что и JFC*/
// Задание 2
/*Ввести в программу пользовательский ввод всех данных: Компания, Количество сотрудников, id исполнительного директора,
Имя исполнительного директора, Возраст исполнительного директора, Зарплата исполнительного директора
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- //