// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// Перечисление
// enum.cpp SimpleEnums
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
#include <iostream>
using namespace std;

/*
Перечисления - это набор именованных целочисленных констант-перечислителей
Перечисления позволяют группировать константы-перечислители
Перечисления позволяют избавиться от магических чисел
Перечисления делают ваш код лаконичным (более понятным и лучше поддерживаемым)
*/

enum Digit { // Идентификатор перечислений принято именовать с большой буквы
    ZERO, // Первый перечислитель по умолчанию начинается с 0
    ONE,
    TWO,
    //THREE = 10, // Так не надо сразу!
    THREE,
    FOUR,
    FIVE,
    SIX,
    SEVEN
};

int main() {
    puts("Доступ к константам перечислений напрямую");
    cout << ZERO << ' ' << ONE << endl;
    puts("Доступ к константам перечислений через идентификатор");
    //ZERO = 10; // Так нельзя, т.к. ZERO - константа
    Digit zero = ZERO;
    Digit one = ONE;
    Digit two = TWO, three = THREE, four = FOUR;
    cout << zero << ' ' << one << '\n';
    cout << two << ' ' << three << ' ' << four << ' ' << FIVE << '\n';
    int six = SIX;
    cout << six << '\n';
    return 0;
}
/* Output:
0 1
2 3 4 5
6
*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//