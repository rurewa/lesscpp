// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// Перечисления enum
// basic.cpp Enums
// V 1.0
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#include<iostream>
using namespace std;

/*
Перечисление - это набор именованных целочисленных констант-перечислители
Перечисления позволяют группировать константы
Перечисления позволяют избавиться от магических чисел
Перечисления делают ваш код лаконичным (более понятным и лучше поддерживаемым)
Перечислениям при объявлении не выделяется оперативная память - добавить!
*/

enum Digits { // Digits - это идентификатор перечисления
    ZERO, // Первый перечислитель по умолчанию всегда 0
    ONE,
    TWO,
    //THREE = 10, // Следующие за ним будут на 1 больше
    THREE,
    FOUR,
    FIVE,
    SIX,
    SEVEN
};

int main() {
    puts("Доступ к перечислителям напрямую");
    cout << ZERO << ' ' << ONE << endl;
    puts("Доступ к перечислителям через идентификатор");
    // ZERO = 10; // Так нельзя!
    Digits zero = ZERO;
    cout << zero << endl;
    return 0;
}
// Output
/*
Доступ к перечислителям напрямую
0 1
Доступ к перечислителям через идентификатор
0
*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// END FILE
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-